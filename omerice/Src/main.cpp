/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  * All rights reserved.</center></h2>
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                        opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "adc.h"
#include "can.h"
#include "spi.h"
#include "tim.h"
#include "usart.h"
#include "gpio.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */


#include "CAN/CAN.hpp"
#include "LowlayerHandel.hpp"
#include "CANTask.hpp"
#include "stdio.h"

/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */

/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */
extern bool i2cflag;
/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/

/* USER CODE BEGIN PV */
/* Private variables ---------------------------------------------------------*/
extern bool CanRxFlag;
extern void FilterConfig();
/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
/* USER CODE BEGIN PFP */
/* Private function prototypes -----------------------------------------------*/
#ifdef __GNUC__
#define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
#else
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#endif /* __GNUC__ */

#ifdef __cplusplus
 extern "C" {
#endif
void __io_putchar(uint8_t ch)
{
	HAL_UART_Transmit(&huart2, &ch, 1, 1);
}
#ifdef __cplusplus
}
#endif

 long count1=0;
 	long count2=0;
 	long count3=0;
 	long count4=0;
 	long count5=0;
 	long count6=0;
 	long count7=0;
 	long count8=0;
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */


//#define useps3

 LowlayerHandleTypdef *plow;



bool move_flag=true;
bool IntFlag=false;
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 			{
 				if(htim->Instance == TIM6)//0.025?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��繧??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��E?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��g?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��v?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��b?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��g?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��?????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��????��?��??��?��??��?��??��?��??��?��??��?��???��?��??��?��??��?��??��?��??��?��??��?��
 					{
 					IntFlag=true;
 					}
 				if(htim->Instance==TIM7)
 				{
 					//
 				}
 			}
#define bord1
//#define bord2
unsigned char countbuf[4]={0,};
/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */




  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_USART2_UART_Init();
  MX_TIM1_Init();
  MX_CAN1_Init();
  MX_TIM8_Init();
  MX_SPI2_Init();
  MX_SPI3_Init();
  MX_TIM5_Init();
  MX_TIM2_Init();
  MX_TIM3_Init();
  MX_TIM4_Init();
  MX_ADC1_Init();
  MX_TIM6_Init();
  MX_TIM7_Init();
  MX_TIM12_Init();
  MX_TIM10_Init();
  MX_TIM11_Init();
  MX_TIM13_Init();
  MX_TIM14_Init();
  /* USER CODE BEGIN 2 */
  LowlayerHandleTypdef hlow;
plow=&hlow;
StdCanBus canbus;
CanTask task1(&canbus,&hlow);
CanTask2 task2(&canbus,&hlow);
#ifdef bord2
CanTask *task=&task2;
#endif

#ifdef bord1
CanTask *task=&task1;
#endif
FilterConfig();
int cout=0;
HAL_TIM_Base_Start_IT(&htim6);
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	 if(CanRxFlag)
	 {
		 task->TaskShift();
		 CanRxFlag=false;
	 }
	 if(IntFlag)
	 {
		// canbus.Send(0x55,0,0);

#ifdef bord1

	 count1=plow->en_a.getcount();
	 					 			countbuf[0]=((unsigned char*)&count1)[0];
	 					 			countbuf[1]=((unsigned char*)&count1)[1];
	 					 			countbuf[2]=((unsigned char*)&count1)[2];
	 					 			countbuf[3]=((unsigned char*)&count1)[3];


	 			count2=plow->en_b.getcount();
	 					 		countbuf[0]=((unsigned char*)&count2)[0];
	 					 		countbuf[1]=((unsigned char*)&count2)[1];
	 					 		countbuf[2]=((unsigned char*)&count2)[2];
	 					 		countbuf[3]=((unsigned char*)&count2)[3];



	 			count3=plow->en_c.getcount();
	 					 		countbuf[0]=((unsigned char*)&count3)[0];
	 					 		countbuf[1]=((unsigned char*)&count3)[1];
	 					 		countbuf[2]=((unsigned char*)&count3)[2];
	 					 		countbuf[3]=((unsigned char*)&count3)[3];


	 			count4=plow->en_d.getcount();
	 					 		countbuf[0]=((unsigned char*)&count4)[0];
	 					 		countbuf[1]=((unsigned char*)&count4)[1];
	 					 		countbuf[2]=((unsigned char*)&count4)[2];
	 					 		countbuf[3]=((unsigned char*)&count4)[3];







		 		canbus.Send(0x40<<4|0x1,4,countbuf);
		 		canbus.Send(0x40<<4|0x2,4,countbuf);
		 		canbus.Send(0x40<<4|0x3,4,countbuf);
		 		canbus.Send(0x40<<4|0xA,4,countbuf);
#endif
#ifdef bord2
	 					 		count5=plow->en_a.getcount();
	 					 											countbuf[0]=((unsigned char*)&count5)[0];
	 					 												countbuf[1]=((unsigned char*)&count5)[1];
	 					 												countbuf[2]=((unsigned char*)&count5)[2];
	 					 												countbuf[3]=((unsigned char*)&count5)[3];


	 					 						count6=plow->en_b.getcount();
	 					 											countbuf[0]=((unsigned char*)&count6)[0];
	 					 											countbuf[1]=((unsigned char*)&count6)[1];
	 					 											countbuf[2]=((unsigned char*)&count6)[2];
	 					 											countbuf[3]=((unsigned char*)&count6)[3];

	 					 						count7=plow->en_c.getcount();
	 					 											countbuf[0]=((unsigned char*)&count7)[0];
	 					 											countbuf[1]=((unsigned char*)&count7)[1];
	 					 											countbuf[2]=((unsigned char*)&count7)[2];
	 					 											countbuf[3]=((unsigned char*)&count7)[3];

	 					 						count8=plow->en_d.getcount();
	 					 											countbuf[0]=((unsigned char*)&count8)[0];
	 					 											countbuf[1]=((unsigned char*)&count8)[1];
	 					 											countbuf[2]=((unsigned char*)&count8)[2];
	 					 											countbuf[3]=((unsigned char*)&count8)[3];










					canbus.Send(0x40<<4|0x8,4,countbuf);
					canbus.Send(0x40<<4|0x7,4,countbuf);
					canbus.Send(0x40<<4|0x6,4,countbuf);
					canbus.Send(0x40<<4|0x5,4,countbuf);


#endif
	}
	 //canbus.Send(0x27,0,0);
	// hlow.m_a.setDuty(10);
//	 hlow.m_b.setDuty(10);
//	 hlow.m_c.setDuty(-10);
//	 hlow.m_d.setDuty(10);
//	 hlow.m_e.setDuty(-10);
//	 hlow.m_f.setDuty(-10);

//	 hlow.m_a.setDuty(30);
	// 	 hlow.m_b.setDuty(30);
//	 	 hlow.m_c.setDuty(30);
//	 	 hlow.m_d.setDuty(10);
//	 	 hlow.m_e.setDuty(30);
//	 	 hlow.m_f.setDuty(30);
	//printf("enA:%ld enB:%ld enC:%ld enD:%ld\n\r",hlow.en_a.getcount(),hlow.en_b.getcount(),hlow.en_c.getcount(),hlow.en_d.getcount());
	// printf("tim2:%lu tim5:%lu\n\r",TIM2->CNT,TIM5->CNT);
	 //cout=TIM5->CNT;


  }

  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = 4;
  RCC_OscInitStruct.PLL.PLLN = 80;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 2;
  RCC_OscInitStruct.PLL.PLLR = 2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  {
    Error_Handler();
  }
}

/* USER CODE BEGIN 4 */

/* USER CODE END 4 */

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  while(1)
  {
  }
  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{ 
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
